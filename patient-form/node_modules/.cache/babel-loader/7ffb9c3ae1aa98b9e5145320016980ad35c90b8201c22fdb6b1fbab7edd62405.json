{"ast":null,"code":"var _jsxFileName = \"/Users/konnos/Documents/Web Dev Course/take-home-fronteng-cb53/patient-form/src/ContactList.js\",\n  _s = $RefreshSig$();\n// // ContactList.js\n// import React, { useState, useEffect } from 'react';\n\n// const ContactList = () => {\n//   const [contacts, setContacts] = useState([]);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8081/contacts');\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n\n//         const data = await response.json();\n//         setContacts(data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error.message);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []); // Empty dependency array means this effect runs once after the initial render\n\n//   return (\n//     <div>\n//       <h1>Contact List</h1>\n//       <ul>\n//         {contacts.map((contact) => (\n//           <li key={contact.id}>\n//             {contact.name} - {contact.email}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ContactList;\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactList() {\n  _s();\n  const url = \"localhost:8081/contacts\";\n  const [data, setData] = useState([]);\n  const fetchInfo = () => {\n    return fetch(url).then(res => res.json()).then(d => setData(d));\n  };\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"using JavaScript inbuilt FETCH API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: data.map((dataObj, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"15em\",\n            backgroundColor: \"#35D841\",\n            padding: 2,\n            borderRadius: 10,\n            marginBlock: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 20,\n              color: 'white'\n            },\n            children: dataObj.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContactList","_s","url","data","setData","fetchInfo","fetch","then","res","json","d","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","dataObj","index","width","backgroundColor","padding","borderRadius","marginBlock","fontSize","name","_c","$RefreshReg$"],"sources":["/Users/konnos/Documents/Web Dev Course/take-home-fronteng-cb53/patient-form/src/ContactList.js"],"sourcesContent":["// // ContactList.js\n// import React, { useState, useEffect } from 'react';\n\n// const ContactList = () => {\n//   const [contacts, setContacts] = useState([]);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8081/contacts');\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n\n//         const data = await response.json();\n//         setContacts(data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error.message);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []); // Empty dependency array means this effect runs once after the initial render\n\n//   return (\n//     <div>\n//       <h1>Contact List</h1>\n//       <ul>\n//         {contacts.map((contact) => (\n//           <li key={contact.id}>\n//             {contact.name} - {contact.email}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ContactList;\n\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction ContactList() {\n  const url = \"localhost:8081/contacts\";\n  const [data, setData] = useState([]);\n\n  const fetchInfo = () => {\n    return fetch(url)\n      .then((res) => res.json())\n      .then((d) => setData(d))\n  }\n\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  return (\n    <div className=\"ContactList\">\n      <h1 style={{ color: \"green\" }}>using JavaScript inbuilt FETCH API</h1>\n      <center>\n        {data.map((dataObj, index) => {\n          return (\n            <div\n              style={{\n                width: \"15em\",\n                backgroundColor: \"#35D841\",\n                padding: 2,\n                borderRadius: 10,\n                marginBlock: 10,\n              }}\n            >\n              <p style={{ fontSize: 20, color: 'white' }}>{dataObj.name}</p>\n            </div>\n          );\n        })}\n      </center>\n    </div>\n  );\n}\n\nexport default ContactList;"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,GAAG,GAAG,yBAAyB;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB,OAAOC,KAAK,CAACJ,GAAG,CAAC,CACdK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,CAAC,IAAKN,OAAO,CAACM,CAAC,CAAC,CAAC;EAC5B,CAAC;EAGDb,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bb,OAAA;MAAIc,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,EAAC;IAAkC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtEnB,OAAA;MAAAa,QAAA,EACGT,IAAI,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QAC5B,oBACEtB,OAAA;UACEc,KAAK,EAAE;YACLS,KAAK,EAAE,MAAM;YACbC,eAAe,EAAE,SAAS;YAC1BC,OAAO,EAAE,CAAC;YACVC,YAAY,EAAE,EAAE;YAChBC,WAAW,EAAE;UACf,CAAE;UAAAd,QAAA,eAEFb,OAAA;YAAGc,KAAK,EAAE;cAAEc,QAAQ,EAAE,EAAE;cAAEb,KAAK,EAAE;YAAQ,CAAE;YAAAF,QAAA,EAAEQ,OAAO,CAACQ;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CArCQD,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}