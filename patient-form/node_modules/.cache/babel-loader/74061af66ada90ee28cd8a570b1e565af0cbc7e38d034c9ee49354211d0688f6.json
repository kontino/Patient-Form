{"ast":null,"code":"var _jsxFileName = \"/Users/konnos/Documents/Web Dev Course/take-home-fronteng-cb53/patient-form/src/ContactList.js\",\n  _s = $RefreshSig$();\n// ContactList.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      fetch('https://localhost:8081/contacts').then(response => response.json()).then(data => {\n        console.log(data);\n        // Handle the data as needed\n      }).catch(error => {\n        console.error('Error fetching contacts:', error);\n      });\n\n      //   try {\n      //     const response = await fetch('localhost:8081/contacts');\n      //     if (!response.ok) {\n      //       throw new Error('Network response was not ok');\n      //     }\n\n      //     const data = await response.json();\n      //     console.log(\"data\",data);\n      //     setContacts(data);\n      //   } catch (error) {\n      //     console.error('Error fetching contacts:', error.message);\n      //   }\n    };\n    fetchContacts();\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  console.log(contacts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contact.name, \" - \", contact.phone]\n      }, \"0\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContactList","_s","contacts","setContacts","fetchContacts","fetch","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","name","phone","_c","$RefreshReg$"],"sources":["/Users/konnos/Documents/Web Dev Course/take-home-fronteng-cb53/patient-form/src/ContactList.js"],"sourcesContent":["// ContactList.js\nimport React, { useState, useEffect } from 'react';\n\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n        fetch('https://localhost:8081/contacts')\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            // Handle the data as needed\n        })\n        .catch(error => {\n            console.error('Error fetching contacts:', error);\n        });\n\n    //   try {\n    //     const response = await fetch('localhost:8081/contacts');\n    //     if (!response.ok) {\n    //       throw new Error('Network response was not ok');\n    //     }\n\n    //     const data = await response.json();\n    //     console.log(\"data\",data);\n    //     setContacts(data);\n    //   } catch (error) {\n    //     console.error('Error fetching contacts:', error.message);\n    //   }\n    };\n\n    fetchContacts();\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  console.log(contacts);\n  return (\n    <div>\n      <h1>Contact List</h1>\n      <ul>\n        {contacts.map((contact) => (\n          <li key=\"0\">\n            {contact.name} - {contact.phone}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9BC,KAAK,CAAC,iCAAiC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB;MACJ,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;QACZH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;;MAEN;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;IACA,CAAC;IAEDT,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERM,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;EACrB,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACpBrB,OAAA;QAAAe,QAAA,GACGM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,KAAK;MAAA,GADzB,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7CID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}