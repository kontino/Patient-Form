{"ast":null,"code":"var _jsxFileName = \"/Users/konnos/Documents/Web Dev Course/take-home-fronteng-cb53/patient-form/src/ContactField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ContactField.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactField = props => {\n  _s();\n  const {\n    fieldHead,\n    fieldName,\n    placeholder,\n    inputType,\n    value,\n    onChange\n  } = props;\n  const [inputText, setInputText] = useState('');\n  useEffect(() => {\n    setInputText(value); // Update the internal state when the external value changes\n  }, [value]);\n  const handleChange = e => {\n    const newText = e.target.value;\n    setInputText(newText);\n    onChange(newText);\n  };\n  if (fieldName !== 'text') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactField\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", fieldHead, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: inputType,\n        className: fieldName,\n        value: inputText,\n        placeholder: placeholder,\n        onChange: handleChange,\n        style: {\n          color: inputText ? '#000' : '#333'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactField\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", fieldHead, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textArea\",\n        placeholder: placeholder,\n        rows: 4,\n        value: inputText,\n        onChange: handleChange,\n        style: {\n          color: inputText ? '#000' : '#333'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(ContactField, \"neS9fgODz7jxanFEO84Md55F7VU=\");\n_c = ContactField;\nexport default ContactField;\nvar _c;\n$RefreshReg$(_c, \"ContactField\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContactField","props","_s","fieldHead","fieldName","placeholder","inputType","value","onChange","inputText","setInputText","handleChange","e","newText","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","style","color","rows","_c","$RefreshReg$"],"sources":["/Users/konnos/Documents/Web Dev Course/take-home-fronteng-cb53/patient-form/src/ContactField.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ContactField.css'\n\nconst ContactField = (props) => {\n    const {fieldHead, fieldName, placeholder, inputType, value, onChange} = props;\n    const [inputText, setInputText] = useState('');\n\n    useEffect(() => {\n        setInputText(value); // Update the internal state when the external value changes\n    }, [value]);\n\n    const handleChange = (e) => {\n        const newText = e.target.value;\n        setInputText(newText);\n        onChange(newText);\n    };\n\n    if (fieldName !== 'text'){\n        return(\n            <div className=\"contactField\">\n                <h2> {fieldHead} </h2>\n                <input \n                type={inputType} \n                className={fieldName} \n                value={inputText}\n                placeholder={placeholder}\n                onChange={handleChange}\n                style={{ color: inputText ? '#000' : '#333' }}\n                />\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"contactField\">\n                <h2> {fieldHead} </h2>\n                <textarea \n                className='textArea' \n                placeholder={placeholder} \n                rows={4}\n                value={inputText}\n                onChange={handleChange}\n                style={{ color: inputText ? '#000' : '#333' }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ContactField;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM;IAACC,SAAS;IAAEC,SAAS;IAAEC,WAAW;IAAEC,SAAS;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGP,KAAK;EAC7E,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZa,YAAY,CAACH,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMI,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACP,KAAK;IAC9BG,YAAY,CAACG,OAAO,CAAC;IACrBL,QAAQ,CAACK,OAAO,CAAC;EACrB,CAAC;EAED,IAAIT,SAAS,KAAK,MAAM,EAAC;IACrB,oBACIL,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBjB,OAAA;QAAAiB,QAAA,GAAI,GAAC,EAACb,SAAS,EAAC,GAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBrB,OAAA;QACAsB,IAAI,EAAEf,SAAU;QAChBS,SAAS,EAAEX,SAAU;QACrBG,KAAK,EAAEE,SAAU;QACjBJ,WAAW,EAAEA,WAAY;QACzBG,QAAQ,EAAEG,YAAa;QACvBW,KAAK,EAAE;UAAEC,KAAK,EAAEd,SAAS,GAAG,MAAM,GAAG;QAAO;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd,CAAC,MAAM;IACH,oBACIrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBjB,OAAA;QAAAiB,QAAA,GAAI,GAAC,EAACb,SAAS,EAAC,GAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBrB,OAAA;QACAgB,SAAS,EAAC,UAAU;QACpBV,WAAW,EAAEA,WAAY;QACzBmB,IAAI,EAAE,CAAE;QACRjB,KAAK,EAAEE,SAAU;QACjBD,QAAQ,EAAEG,YAAa;QACvBW,KAAK,EAAE;UAAEC,KAAK,EAAEd,SAAS,GAAG,MAAM,GAAG;QAAO;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ,CAAC;AAAAlB,EAAA,CA3CKF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}